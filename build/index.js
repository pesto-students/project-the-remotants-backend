!function(e){var r={};function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var a in e)t.d(n,a,function(r){return e[r]}.bind(null,a));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=14)}([function(e,r){e.exports=require("express")},function(e,r){e.exports=require("dotenv")},function(e,r){e.exports=require("shortid")},function(e,r){e.exports=require("querystring")},function(e,r){e.exports=require("bcrypt")},function(e,r){e.exports=require("jsonwebtoken")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("axios")},function(e,r){e.exports=require("https")},function(e,r){e.exports=require("lodash/isEmpty")},function(e,r){e.exports=require("validator")},function(e,r){e.exports=require("mongodb")},function(e,r){e.exports=require("cors")},function(e,r){e.exports=require("morgan")},function(e,r,t){"use strict";t.r(r);var n=t(0),a=t.n(n),o=t(13),s=t.n(o),i=t(12),c=t.n(i),u=t(6),T=t(2),l=t.n(T),_=t(11),d=t(1),O=t.n(d);O.a.config();const{DB_URL:E,DB_NAME:m,USERS_COLLECTION:A,ORGANISATIONS_COLLECTION:p,TEST_DB_URL:h,TEST_DB_NAME:w,TEST_USERS_COLLECTION:I,TEST_ORGANISATION_COLLECTION:g,SECRET:U,SALT_ROUNDS:C}=process.env,f={DB_URL:E,DB_NAME:m,USERS_COLLECTION:A,ORGANISATIONS_COLLECTION:p,SECRET:U,SALT_ROUNDS:C,ONE_DAY:604800,PORT:process.env.PORT||8e3,FRONTEND_URL:"http://localhost:8080"},H=f.DB_URL,{DB_NAME:y}=f;let R;const S=async()=>{if(await(async()=>(void 0===R&&(R=await _.MongoClient.connect(H,{useNewUrlParser:!0})),R))(),void 0===R)throw new Error("No connection instance present");return R.db(y)};var N=t(5),L=t.n(N);var v=async(e,r,t)=>{try{const n=await e.collection(r).find({email:t}).project({_id:0,id:1,email:1}).toArray(),[a]=n;return null===a?null:a}catch(e){return null}};var D=t(4),b=t.n(D);var j=t(10),k=t.n(j),x=t(9),M=t.n(x);var P={validateInput:e=>{const{email:r}=e,t={};return k.a.isEmail(r)||(t.name="Email is invalid"),{errors:t,isValid:M()(t)}}};const B="/register",G="/login",q="/setup-1",W="/setup-2",K="/github/authenticate/:code",$="/wakatime/authenticate/:code",F={Projects:"https://wakatime.com/api/v1/users/current/projects"};var z={Home:"/",Test:"/test",Auth:"/auth",Dashboard:"/dashboard",Organisation:"/organisation",WakaTime:"/api/wakatime",GitHub:"/api/github"};const V=a.a.Router(),Y=async(e,r,{id:t,email:n,password:a})=>{try{const o=await(async e=>{return await b.a.hash(e,Number(f.SALT_ROUNDS))})(a);return await e.collection(r).insertOne({id:t,email:n,password:o}),{success:!0}}catch(e){return{errors:{name:"[Register]: Caught an error while adding/updating user"}}}},J=async(e,r,{email:t,password:n})=>{try{const a=await e.collection(r).findOne({email:t});if(null===a)return{errors:{name:"Email entered is incorrect"}};const o=a.password;return!1===await(async(e,r)=>{return await b.a.compare(e,r)})(n,o)?{errors:{name:"Password entered is incorrect"}}:{success:!0,token:(e=>{return L.a.sign({email:e},f.SECRET,{expiresIn:Math.floor((new Date).getTime()/1e3)+ +f.ONE_DAY})})(a.email)}}catch(e){return{errors:{name:"[Login]: Caught an error while getting user from the database."}}}};V.post(B,async(e,r)=>{const t=await S(),n=f.USERS_COLLECTION,a=e.body,{errors:o,isValid:s}=P.validateInput(a);if(s){const e=l.a.generate().toLowerCase(),o=await(async(e,r,{id:t,email:n,password:a})=>{try{return 0===await e.collection(r).count({email:n})?await Y(e,r,{id:t,email:n,password:a}):{errors:{name:"User exists"}}}catch(e){return{errors:{name:"[Register]: Caught an error while registering user."}}}})(t,n,{...a,id:e});r.json(o)}else r.json({errors:o})}),V.post(G,async(e,r)=>{const t=await S(),n=f.USERS_COLLECTION,a=e.body,{errors:o,isValid:s}=P.validateInput(a);if(s){const e=await J(t,n,a);r.json(e)}else r.json({errors:o})});var Q=V;var X=async(e,r,t)=>{try{return 0===await e.collection(r).count({username:t})?{success:!0}:{errors:{name:"Username already exists"}}}catch(e){return{errors:{name:"Caught an error while finding if username exists or not"}}}};const Z=a.a.Router();Z.post(z.Home,async(e,r)=>{const{currentUser:t}=e,n=await S(),a=f.USERS_COLLECTION,o=await(async(e,r,t,n)=>{const{name:a,username:o}=n,s=await X(e,r,o);if(!0!==s.success)return s;try{return await e.collection(r).update({email:t},{$set:{name:a,username:o}}),{success:!0}}catch(e){return{errors:{name:"[Update]: Caught an error while updating user details."}}}})(n,a,t,e.body);r.json(o)});var ee=Z,re=t(8),te=t.n(re),ne=t(3),ae=t.n(ne);O.a.config();const{OAUTH_PORT:oe,OAUTH_METHOD:se,OAUTH_GITHUB_CLIENT_ID:ie,OAUTH_GITHUB_CLIENT_SECRET:ce,OAUTH_GITHUB_HOST:ue,OAUTH_GITHUB_PATH:Te,OAUTH_WAKATIME_CLIENT_ID:le,OAUTH_WAKATIME_CLIENT_SECRET:_e,OAUTH_WAKATIME_HOST:de,OAUTH_WAKATIME_PATH:Oe}=process.env;var Ee={OAUTH_PORT:oe,OAUTH_METHOD:se,OAUTH_GITHUB_CLIENT_ID:ie,OAUTH_GITHUB_CLIENT_SECRET:ce,OAUTH_GITHUB_HOST:ue,OAUTH_GITHUB_PATH:Te,OAUTH_GITHUB_REDIRECT_URI:`${f.FRONTEND_URL}/setup-2?auth=github`,OAUTH_WAKATIME_CLIENT_ID:le,OAUTH_WAKATIME_CLIENT_SECRET:_e,OAUTH_WAKATIME_HOST:de,OAUTH_WAKATIME_PATH:Oe,OAUTH_WAKATIME_REDIRECT_URI:`${f.FRONTEND_URL}/setup-2?auth=wakatime`};const me=a.a.Router(),Ae=async(e,r,t,n,a)=>{try{return await e.collection(r).update({email:t},{$set:{[n]:a}}),{success:!0}}catch(e){return{errors:{name:"Caught an error at the time of storing auth details"}}}},pe=(e,r,t)=>{const{data:n,reqOptions:a}=((e,r)=>{let t,n;return"github"===e?(t=ae.a.stringify({client_id:Ee.OAUTH_GITHUB_CLIENT_ID,client_secret:Ee.OAUTH_GITHUB_CLIENT_SECRET,redirect_uri:Ee.OAUTH_GITHUB_REDIRECT_URI,code:r}),n={host:Ee.OAUTH_GITHUB_HOST,port:Ee.OAUTH_PORT,path:Ee.OAUTH_GITHUB_PATH,method:Ee.OAUTH_METHOD,headers:{"Content-Type":"application/x-www-form-urlencoded","content-length":t.length}}):"wakatime"===e&&(t=ae.a.stringify({client_id:Ee.OAUTH_WAKATIME_CLIENT_ID,client_secret:Ee.OAUTH_WAKATIME_CLIENT_SECRET,redirect_uri:Ee.OAUTH_WAKATIME_REDIRECT_URI,grant_type:"authorization_code",code:r}),n={host:Ee.OAUTH_WAKATIME_HOST,port:Ee.OAUTH_PORT,path:Ee.OAUTH_WAKATIME_PATH,method:Ee.OAUTH_METHOD,headers:{"Content-Type":"application/x-www-form-urlencoded","content-length":t.length}}),{data:t,reqOptions:n}})(e,r);let o="";const s=te.a.request(a,e=>{e.setEncoding("utf8"),e.on("data",e=>{o+=e}),e.on("end",()=>{t(null,ae.a.parse(o))})});s.write(n),s.end(),s.on("error",e=>{t(e.message)})};me.all("*",(e,r,t)=>{r.header("Access-Control-Allow-Origin","*"),r.header("Access-Control-Allow-Methods","GET, POST, OPTIONS"),r.header("Access-Control-Allow-Headers","Content-Type"),t()}),me.get(K,(e,r)=>{pe("github",e.params.code,async(t,n)=>{const a={};if(null!==t)a.errors={name:t};else{const r=n;a.token=r.access_token;const{currentUser:t}=e,o=await S(),s=f.USERS_COLLECTION,{success:i,errors:c}=await Ae(o,s,t,"github",r);!0===i?a.success=i:a.errors=c}r.json(a)})}),me.get($,(e,r)=>{pe("wakatime",e.params.code,async(t,n)=>{const a={};if(null!==t)a.errors={name:t};else{let[r]=Object.keys(n);r=JSON.parse(r),a.token=r.access_token;const{currentUser:t}=e,o=await S(),s=f.USERS_COLLECTION,{success:i,errors:c}=await Ae(o,s,t,"wakatime",r);!0===i?a.success=i:a.errors=c}r.json(a)})});var he=me;var we=async(e,r,t)=>{return(await v(e,r,t)).id};var Ie=async(e,r,{name:t,description:n,ownerID:a})=>{try{return 0===await e.collection(r).count({name:t})?await(async(e,r,{name:t,description:n,ownerID:a})=>{const o=l.a.generate().toLowerCase();try{return await e.collection(r).insertOne({id:o,name:t,description:n,ownerID:a}),{success:!0}}catch(e){return{errors:{name:"[Register]: Caught an error while adding organisation to the Database."}}}})(e,r,{name:t,description:n,ownerID:a}):{errors:{name:"Organisation exists"}}}catch(e){return{errors:{name:"[Register]: Caught an error while registering org."}}}};const ge=a.a.Router();ge.post("/setup",async(e,r)=>{const{currentUser:t}=e,n=await S(),a=f.USERS_COLLECTION,o=f.ORGANISATIONS_COLLECTION,s=await we(n,a,t);void 0===s&&r.json({error:{name:"Could not fetch User ID"}});const i=await Ie(n,o,{...e.body,ownerID:s});r.json(i)});var Ue=ge,Ce=t(7),fe=t.n(Ce);const He=a.a.Router();He.get("/users/current/projects",async(e,r)=>{const{currentUser:t}=e,n=await S(),a=f.USERS_COLLECTION,{success:o,token:s,errors:i}=await(async(e,r,t)=>{try{const n=await e.collection(r).find({email:t}).project({_id:0,"wakatime.access_token":1}).toArray(),[a]=n,o=a.wakatime.access_token;return void 0===o?{errors:{name:"You need to connect your wakatime account!"}}:{success:!0,token:o}}catch(e){return{errors:{name:"Caught an error while getting details from Mongo"}}}})(n,a,t);let c;if(!0===o){const e={method:"GET",headers:{Authorization:`Bearer ${s}`}};try{c=(await fe()(F.Projects,e)).data}catch(e){c={errors:{name:"Caught an error while making API request to WakaTime"}}}}else c={errors:i};r.json(c)});var ye=He;const Re=a.a.Router();Re.use(async(e,r,t)=>{const n=e.headers.authorization;let a;if(n&&([,a]=n.split(" ")),a)try{const{success:n,user:o,errors:s}=await(async e=>await L.a.verify(e,f.SECRET,async(e,r)=>{if(e)return{errors:{name:`Failed to authenticate: ${e}`}};const{email:t}=r,n=await S();try{const e=await v(n,"users",t);return null===e?{errors:{name:"No such user"}}:{success:!0,user:e}}catch(e){return{errors:{name:"Caught an error while checking if the user exists or not."}}}}))(a);!0===n?(e.currentUser=o.email,t()):r.json(s)}catch(e){r.json({errors:{name:"Caught an error at the time of verifying token."}})}else r.json({errors:{name:"No token provided"}})}),Re.use(q,ee),Re.use(W,he),Re.use(z.Organisation,Ue),Re.use(z.WakaTime,ye),Re.get(z.Home,(e,r)=>{r.json({success:!0})});var Se=Re;const Ne=a()();Ne.use(s()("dev")),Ne.use(c()()),Ne.use(Object(u.json)()),Ne.use(Object(u.urlencoded)({extended:!0})),Ne.use(z.Auth,Q),Ne.use(z.Dashboard,Se),Ne.get(z.Home,(e,r)=>{r.send("Roll over to /test to see it it's working or not")}),Ne.get(z.Test,(e,r)=>{r.json({status:"Working!"})});const Le=Ne.listen(f.PORT,()=>{console.log("production"),console.log(`Backend is running on PORT: ${f.PORT}`)});r.default=Le}]);